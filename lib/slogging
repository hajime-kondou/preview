#!/bin/bash
#
# lib/slogging
# Functions to control the configuration and operation of the slogging plugin

# Dependencies:
#
# - Swift service has already installed into $DEST/swift with below in local.conf
# - ``s-proxy``, ``s-container``, ``s-object``, ``s-object``

# - ``functions`` file
# - ``DEST``,  ``$STACK_USER``must be defined

# - ``lib/swift`` file
# - ``SWIFT_CONFIG_PROXY_SERVER`` must be defined

# ``stack.sh`` file
# - ``echo_summary`` function must be defined
#

# ``stack.sh`` calls the entry points in this order:
#
# - install_slogging
# - configure_slogging
# - verify_swift
# - test-config_slogging

function _get_token_and_endpoint {
    curl -v -H "X-Storage-User:${SLOGGING['tempuser']}" \
            -H "X-Storage-Pass:${SLOGGING['temppass']}" \
               ${SLOGGING['auth_url']} 2>&1 | \
    egrep 'X-Storage-Url:|X-Auth-Token:' | \
    sed -e 's,: ,=,g' -e 's,<,,g' -e 's,\-,_,g' -e 's,\r,,g'
}

function _exec_swift_api {
    for envvar in $(set | awk -F'=' '/^OS_/{print $1}'); do
        unset ${envvar}
    done
    swift -A ${SLOGGING['auth_url']} \
          -U ${SLOGGING['tempuser']} \
          -K ${SLOGGING['temppass']} stat
}

function install_slogging {
    pushd $DEST/slogging && {
        sudo python setup.py install
    } && popd
}

function configure_slogging {
    local saio_base="$DEST/swift/doc/saio"
    local rsyslog_conf="rsyslog.d/10-swift.conf"

    # Set config
    if [ ! -f "/etc/${rsyslog_conf}" ]; then
        sudo cp ${saio_base}/${rsyslog_conf} /etc/${rsyslog_conf}
    fi
    sudo sed -i -e "s,/var/log/swift,$DEST/data/swift/logs,g" /etc/${rsyslog_conf}
    sudo sed -i -e 's,#\$templat,$templat,g' -e 's,#local1\.,local1.,g' /etc/${rsyslog_conf}
    sudo sed -e '/PrivDropToGroup/c $PrivDropToGroup adm' /etc/rsyslog.conf

    # Set directory
    sudo mkdir -p $DEST/data/swift/logs/hourly
    safe_chown -R $STACK_USER.adm $DEST/data/swift
    safe_chmod 775 $DEST/data/swift/logs $DEST/data/swift/logs/hourly
    add_user_to_group syslog adm
    add_user_to_group $STACK_USER adm

    # Reflect daemon
    restart_service rsyslog

    # Generate /etc/swift/log-processor.conf
    sudo cp $DEST/slogging/devstack/files/log-processor.conf /etc/swift/
    sudo sed -i -e "s,%TEMPACCOUNT%,${SLOGGING['tempaccount']},g" /etc/swift/log-processor.conf
    sudo sed -i -e "s,%DEST%,$DEST,g" /etc/swift/log-processor.conf
    sudo sed -i -e "s,%STACK_USER%,$STACK_USER,g" /etc/swift/log-processor.conf

    iniset $SWIFT_CONFIG_PROXY_SERVER app:proxy-server log_facility LOG_LOCAL1

    # Set cron
    if [ "${SLOGGING_CRON}" == "True" ]; then
        sudo cp $DEST/slogging/devstack/files/cron.d/* /etc/cron.d/
        sudo sed -i -e "s,%STACK_USER%,$STACK_USER,g" /etc/cron.d/*
    fi
}

function verify_swift {
    # Internal proxy(identity) API
    for var in $(_get_token_and_endpoint); do export ${var}; done
    curl -v -H "X-Auth-Token: ${X_Auth_Token}" ${X_Storage_Url}

    # Swift API
    local retry=3
    local interval=5
    for i in {1..${retry}}; do
        ( _exec_swift_api ) && return 0
        sleep ${interval}
    done
    return -1
}

function test-config_slogging {
    echo_summary "Swift's Function Test"
    $DEST/swift/.functests
}

